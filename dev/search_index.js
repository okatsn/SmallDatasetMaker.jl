var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SmallDatasetMaker","category":"page"},{"location":"#SmallDatasetMaker","page":"Home","title":"SmallDatasetMaker","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SmallDatasetMaker.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SmallDatasetMaker]","category":"page"},{"location":"#SmallDatasetMaker.column_field_dictionary","page":"Home","title":"SmallDatasetMaker.column_field_dictionary","text":"column_field_dictionary follows the order of the field of Source data.\n\n\n\n\n\n","category":"constant"},{"location":"#SmallDatasetMaker.field_column_dictionary","page":"Home","title":"SmallDatasetMaker.field_column_dictionary","text":"field_column_dictionary follows the order of the field of Source data.\n\n\n\n\n\n","category":"constant"},{"location":"#SmallDatasetMaker.ordered_columns","page":"Home","title":"SmallDatasetMaker.ordered_columns","text":"The order for dataset_table().\n\n\n\n\n\n","category":"constant"},{"location":"#DataFrames.DataFrame-Tuple{SourceData}","page":"Home","title":"DataFrames.DataFrame","text":"Construct a DataFrame following the order of ordered_columns.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.SourceData-NTuple{4, Any}","page":"Home","title":"SmallDatasetMaker.SourceData","text":"If zipfile not specified, it will be dir_data(package_name, dataset_name*\".gz\").\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.SourceData-NTuple{5, Any}","page":"Home","title":"SmallDatasetMaker.SourceData","text":"If rows, columns not specified, CSV.read(srcfile, DataFrame) will be applied to get the number of rows/columns.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.SourceData-NTuple{7, Any}","page":"Home","title":"SmallDatasetMaker.SourceData","text":"If description not specified, it will be \"\".\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.SourceData-NTuple{8, Any}","page":"Home","title":"SmallDatasetMaker.SourceData","text":"SourceData(srcfile, packagename, datasetname, title, zipfile, rows, columns, description, timestamps)\n\nsrcfile is the path to the source file, the package_name will be the folder that the file resides, the dataset_name will be the name of the data without extension.\n\nIf timestamps not specified, it will be today().\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.SourceData-Tuple{Any, Any, Any}","page":"Home","title":"SmallDatasetMaker.SourceData","text":"If title not specified, it will be \"Data [$dataset_name] of [$package_name]\".\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.SourceData-Tuple{Any}","page":"Home","title":"SmallDatasetMaker.SourceData","text":"If package_name, dataset_name not specified, (package_name, dataset_name) = get_package_dataset_name(srcfile) is applied.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.SourceData-Tuple{Module, DataFrames.DataFrameRow}","page":"Home","title":"SmallDatasetMaker.SourceData","text":"SourceData(mod::Module, row::DataFrameRow) applies create an SourceData objects from a row of a DataFrame (i.e., dataset_table(mod)), with abspath! applied.\n\nThis is for loading data according to dataset_table; thus, paths should be referred to that in mod instead of being relative to the current directory.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.DATASET_ABS_DIR-Tuple{Module}","page":"Home","title":"SmallDatasetMaker.DATASET_ABS_DIR","text":"DATASET_ABS_DIR(mod::Module) returns the absolute directory for package mod.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.abspath!-Tuple{SourceData, Module}","page":"Home","title":"SmallDatasetMaker.abspath!","text":"abspath!(SD::SourceData, mod::Module) makes all paths in SD to be absolute with the starting directory DATASET_ABS_DIR.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.abspath-Tuple{Module, Vararg{Any}}","page":"Home","title":"SmallDatasetMaker.abspath","text":"abspath(mod::Module, args...) = joinpath(DATASET_ABS_DIR(mod)[], args...)\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.compress_save!-Tuple{Module, SourceData}","page":"Home","title":"SmallDatasetMaker.compress_save!","text":"compress_save!(mod::Module, SD::SourceData; move_source = true) compress the SD.srcfile, save the zipped one to SD.zipfile, and update the dataset_table(mod). By default, move_source = true that the source file will be moved to dir_raw().\n\ncompress_save! returns SD::SourceData of relative paths to DATASET_ABS_DIR(mod)[], where relpath! is applied that paths SD as well as dataset_table(mod) are modified to be relative.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.compress_save-Tuple{Module, Any}","page":"Home","title":"SmallDatasetMaker.compress_save","text":"compress_save(mod::Module, srcpath; args...) is equivalent to compress_save!(mod, SourceData(srcpath)) but returns SD::SourceData.\n\ncompress_save takes the same keyword arguments as compress_save!, which returns SD::SourceData of relative paths to DATASET_ABS_DIR(mod)[].\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.create_empty_table-Tuple","page":"Home","title":"SmallDatasetMaker.create_empty_table","text":"Initiate referencing table at dataset_table(args...). It takes exactly the same arguments of dataset_table.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.dataset-Tuple{Any}","page":"Home","title":"SmallDatasetMaker.dataset","text":"dataset(target_path) decompress target_path and returns it as a DataFrame.\n\nNotice!\n\nIf you were intended to load target_path under SmallDatasetMaker or anyother package rather than the current directory you are working with, you should apply abspath(args::String...) or abspath(ACertainImportedPackage, args::String...) that target_path = SmallDatasetMaker.abspath(...).\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.dataset-Tuple{Module, AbstractString, AbstractString}","page":"Home","title":"SmallDatasetMaker.dataset","text":"dataset(package_name::AbstractString, dataset_name::AbstractString) returns a DataFrame object unzipped from the last row returned by target_row(mod, package_name, dataset_name). This function mimics the dataset function in RDatasets.jl.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.dataset_dir-Tuple{Module, Vararg{String}}","page":"Home","title":"SmallDatasetMaker.dataset_dir","text":"dataset_dir(mod::Module, args::String...) returns the absolute dataset path referencing mod.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.dataset_table-Tuple{Module}","page":"Home","title":"SmallDatasetMaker.dataset_table","text":"dataset_table(mod::Module) = joinpath(DATASET_ABS_DIR(mod)[],\"data\", \"doc\", \"datasets.csv\")\n\nThe reason for dataset_table to be a function rather than a constant is that I can redefine it in the scope of test. See test/compdecomp.jl.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.datasets-Tuple{Module}","page":"Home","title":"SmallDatasetMaker.datasets","text":"datasets(mod::Module) reads the table from dataset_table(mod), and set __datasets::DataFrame to be the global variable in the scope of mod.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.dir_data-Tuple","page":"Home","title":"SmallDatasetMaker.dir_data","text":"Relative path to the directory of data; this is called by SourceData.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.dir_data-Tuple{Module, Vararg{Any}}","page":"Home","title":"SmallDatasetMaker.dir_data","text":"Absolute path to the directory of data.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.dir_raw-Tuple{Module, Vararg{Any}}","page":"Home","title":"SmallDatasetMaker.dir_raw","text":"Path to the directory for the backup of the raw data; only for package internal use.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.get_package_dataset_name-Tuple{Any}","page":"Home","title":"SmallDatasetMaker.get_package_dataset_name","text":"Given path to the source file, get_package_dataset_name(srcpath) derive package name and dataset name from the srcpath.\n\nExample\n\nsrcpath = joinpath(\"Whatever\", \"RDatasets\", \"iris.csv\")\nSmallDatasetMaker.get_package_dataset_name(srcpath)\n\n# output\n\n(\"RDatasets\", \"iris\")\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.load_original-Tuple{AbstractString}","page":"Home","title":"SmallDatasetMaker.load_original","text":"load_original(path::AbstractString) opens path and return the read data.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.relpath!-Tuple{SourceData, Module}","page":"Home","title":"SmallDatasetMaker.relpath!","text":"relpath!(SD::SourceData, mod::Module) makes all paths in SD to be relative path to DATASET_ABS_DIR.\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.return_compressed-Tuple{AbstractString}","page":"Home","title":"SmallDatasetMaker.return_compressed","text":"return_compressed(path::AbstractString) returned compressed data.\n\nExample\n\ncompressed = return_compressed(\"data/data.csv\")\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.return_compressed-Tuple{Vector{UInt8}}","page":"Home","title":"SmallDatasetMaker.return_compressed","text":"return_compressed(data::Vector{UInt8}) returned compressed data.\n\nExample\n\ndata = load_original(\"data/data.csv\")\ncompressed = return_compressed(data)\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.target_row-Tuple{Module, Any, Any}","page":"Home","title":"SmallDatasetMaker.target_row","text":"target_row returns the latest information in datasets(mod::Module). Given package_name, dataset_name, target_row(mod, package_name, dataset_name), target_row returns the last row that matches row.PackageName == package_name && row.Dataset == dataset_name\".\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.unzip_file-Tuple{Any}","page":"Home","title":"SmallDatasetMaker.unzip_file","text":"unzip_file(target_path) unzip file at target_path to current directory preserve its original name.\n\nNotice!\n\nIf you were intended to load target_path under SmallDatasetMaker or anyother package rather than the current directory you are working with, you should apply abspath(args::String...) or abspath(ACertainImportedPackage, args::String...) that target_path = SmallDatasetMaker.abspath(...).\n\n\n\n\n\n","category":"method"},{"location":"#SmallDatasetMaker.unzip_file-Tuple{Module, AbstractString, AbstractString}","page":"Home","title":"SmallDatasetMaker.unzip_file","text":"The same as dataset, but also save the unzip file.\n\n\n\n\n\n","category":"method"}]
}
